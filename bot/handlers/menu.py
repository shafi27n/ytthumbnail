from flask import jsonify

def handle_menu(user_info, chat_id, message_text):
    """Handle /menu command with interactive buttons"""
    
    user_name = user_info.get('first_name', 'User')
    
    response_text = f"""
ЁЯОп <b>ржорзЗржЗржи ржорзЗржирзБ</b>

тЬи рж╕рзНржмрж╛ржЧрждржо <b>{user_name}</b>!

ржирж┐ржЪрзЗрж░ ржмрж╛ржЯржиржЧрзБрж▓рзЛ ржерзЗржХрзЗ ржЖржкржирж╛рж░ ржкржЫржирзНржжрзЗрж░ ржЕржкрж╢ржи рж╕рж┐рж▓рзЗржХрзНржЯ ржХрж░рзБржи:

тАв <b>рж╕рж╣рж╛ржпрж╝рждрж╛</b> - рж╕ржм ржХржорж╛ржирзНржбрзЗрж░ рждржерзНржп
тАв <b>рж╢рзБрж░рзБ ржХрж░рзБржи</b> - ржмржЯ ржмрзНржпржмрж╣рж╛рж░ рж╢рзБрж░рзБ ржХрж░рзБржи  
тАв <b>ржлрж░рзНржо ржЬржорж╛ ржжрж┐ржи</b> - ржирж╛ржо ржУ ржЫржмрж┐ ржЬржорж╛ ржжрж┐ржи

ЁЯСЗ <b>ржмрж╛ржЯржи ржкрзНрж░рзЗрж╕ ржХрж░рзЗ ржирж┐рж░рзНржмрж╛ржЪржи ржХрж░рзБржи:</b>
    """
    
    keyboard = {
        'inline_keyboard': [
            [
                {'text': 'ЁЯЖШ рж╕рж╣рж╛ржпрж╝рждрж╛', 'callback_data': 'menu_help'},
                {'text': 'ЁЯЪА рж╢рзБрж░рзБ ржХрж░рзБржи', 'callback_data': 'menu_start'}
            ],
            [
                {'text': 'ЁЯУЛ ржлрж░рзНржо ржЬржорж╛ ржжрж┐ржи', 'callback_data': 'menu_form'}
            ],
            [
                {'text': 'ЁЯФД рж░рж┐ржлрзНрж░рзЗрж╢ ржорзЗржирзБ', 'callback_data': 'menu_refresh'}
            ]
        ]
    }
    
    return jsonify({
        'method': 'sendMessage',
        'chat_id': chat_id,
        'text': response_text,
        'parse_mode': 'HTML',
        'reply_markup': keyboard
    })

def handle_all_callbacks(callback_data, user_info, chat_id, message_id):
    """Handle all menu callbacks"""
    
    if callback_data == 'menu_help':
        return show_help_menu(chat_id, message_id)
    
    elif callback_data == 'menu_start':
        return show_start_menu(chat_id, message_id, user_info)
    
    elif callback_data == 'menu_form':
        return show_form_menu(chat_id, message_id)
    
    elif callback_data == 'menu_refresh':
        return refresh_main_menu(chat_id, message_id, user_info)
    
    elif callback_data == 'start_form_from_menu':
        # Return a new message to start form (can't edit message for session start)
        from .form import handle_form
        return handle_form(user_info, chat_id, "")
    
    elif callback_data == 'back_to_main':
        return refresh_main_menu(chat_id, message_id, user_info)
    
    return None

def show_help_menu(chat_id, message_id):
    """Show help information"""
    
    help_text = """
ЁЯЖШ <b>рж╕рж╣рж╛ржпрж╝рждрж╛ ржорзЗржирзБ</b>

ЁЯУЪ <b>рж╕ржХрж▓ ржХржорж╛ржирзНржб:</b>

тАв <code>/start</code> - ржмржЯ рж╢рзБрж░рзБ ржХрж░рзБржи
тАв <code>/menu</code> - ржорзЗржЗржи ржорзЗржирзБ ржжрзЗржЦрзБржи  
тАв <code>/form</code> - ржлрж░рзНржо ржЬржорж╛ ржжрж┐ржи
тАв <code>/help</code> - рж╕рж╣рж╛ржпрж╝рждрж╛ ржжрзЗржЦрзБржи
тАв <code>/cancel</code> - ржмрж░рзНрждржорж╛ржи ржХрж╛ржЬ ржмрж╛рждрж┐рж▓ ржХрж░рзБржи

тД╣я╕П <b>ржХрж┐ржнрж╛ржмрзЗ ржмрзНржпржмрж╣рж╛рж░ ржХрж░ржмрзЗржи:</b>
рзз. <b>/form</b> ржжрж┐ржпрж╝рзЗ ржлрж░рзНржо рж╢рзБрж░рзБ ржХрж░рзБржи
рзи. ржЖржкржирж╛рж░ ржирж╛ржо рж▓рж┐ржЦрзБржи
рзй. ржЫржмрж┐ ржЖржкрж▓рзЛржб ржХрж░рзБржи
рзк. ржбрж╛ржЯрж╛ ржЕржЯрзЛржорзЗржЯрж┐ржХ ржЧрзНрж░рзБржкрзЗ рж╢рзЗржпрж╝рж╛рж░ рж╣ржмрзЗ
    """
    
    keyboard = {
        'inline_keyboard': [
            [{'text': 'ЁЯУЛ ржлрж░рзНржо рж╢рзБрж░рзБ ржХрж░рзБржи', 'callback_data': 'start_form_from_menu'}],
            [{'text': 'тЖйя╕П ржорзЗржирзБрждрзЗ ржлрж┐рж░рзБржи', 'callback_data': 'back_to_main'}]
        ]
    }
    
    return jsonify({
        'method': 'editMessageText',
        'chat_id': chat_id,
        'message_id': message_id,
        'text': help_text,
        'parse_mode': 'HTML',
        'reply_markup': keyboard
    })

def show_start_menu(chat_id, message_id, user_info):
    """Show start information"""
    
    user_name = user_info.get('first_name', 'User')
    
    start_text = f"""
ЁЯЪА <b>ржмржЯ рж╢рзБрж░рзБ ржХрж░рж╛ рж╣рзЯрзЗржЫрзЗ!</b>

ЁЯОЙ рж╕рзНржмрж╛ржЧрждржо <b>{user_name}</b>! ржПржЗ ржмржЯрзЗрж░ ржорж╛ржзрзНржпржорзЗ ржЖржкржирж┐:

тАв ЁЯУЛ <b>ржлрж░рзНржо ржЬржорж╛</b> ржжрж┐рждрзЗ ржкрж╛рж░ржмрзЗржи
тАв ЁЯЦ╝я╕П <b>ржЫржмрж┐ ржЖржкрж▓рзЛржб</b> ржХрж░рждрзЗ ржкрж╛рж░ржмрзЗржи  
тАв ЁЯСе <b>ржЧрзНрж░рзБржкрзЗ ржбрж╛ржЯрж╛</b> рж╢рзЗржпрж╝рж╛рж░ ржХрж░рждрзЗ ржкрж╛рж░ржмрзЗржи

ЁЯУМ <b>ржжрзНрж░рзБржд рж╢рзБрж░рзБ ржХрж░рждрзЗ:</b>
ржирж┐ржЪрзЗрж░ <b>'ржлрж░рзНржо рж╢рзБрж░рзБ ржХрж░рзБржи'</b> ржмрж╛ржЯржи ржкрзНрж░рзЗрж╕ ржХрж░рзБржи
    """
    
    keyboard = {
        'inline_keyboard': [
            [{'text': 'ЁЯУЛ ржлрж░рзНржо рж╢рзБрж░рзБ ржХрж░рзБржи', 'callback_data': 'start_form_from_menu'}],
            [{'text': 'ЁЯЖШ рж╕рж╣рж╛ржпрж╝рждрж╛', 'callback_data': 'menu_help'}],
            [{'text': 'тЖйя╕П ржорзЗржирзБрждрзЗ ржлрж┐рж░рзБржи', 'callback_data': 'back_to_main'}]
        ]
    }
    
    return jsonify({
        'method': 'editMessageText',
        'chat_id': chat_id,
        'message_id': message_id,
        'text': start_text,
        'parse_mode': 'HTML',
        'reply_markup': keyboard
    })

def show_form_menu(chat_id, message_id):
    """Show form information"""
    
    form_text = """
ЁЯУЛ <b>ржлрж░рзНржо рж╕рж┐рж╕рзНржЯрзЗржо</b>

ржПржЗ ржлрж░рзНржорзЗрж░ ржорж╛ржзрзНржпржорзЗ ржЖржкржирж┐:

1. ЁЯУЫ <b>ржЖржкржирж╛рж░ ржирж╛ржо</b> ржЬржорж╛ ржжрж┐рждрзЗ ржкрж╛рж░ржмрзЗржи
2. ЁЯЦ╝я╕П <b>ржЖржкржирж╛рж░ ржЫржмрж┐</b> ржЖржкрж▓рзЛржб ржХрж░рждрзЗ ржкрж╛рж░ржмрзЗржи  
3. ЁЯСе <b>ржбрж╛ржЯрж╛ ржЧрзНрж░рзБржкрзЗ</b> рж╢рзЗржпрж╝рж╛рж░ ржХрж░рждрзЗ ржкрж╛рж░ржмрзЗржи

ЁЯФД <b>ржХрж╛ржЬрзЗрж░ ржзрж╛ржк:</b>
1. ржлрж░рзНржо рж╢рзБрж░рзБ ржХрж░рзБржи
2. ржирж╛ржо рж▓рж┐ржЦрзБржи
3. ржЫржмрж┐ ржЖржкрж▓рзЛржб ржХрж░рзБржи
4. ржЕржЯрзЛржорзЗржЯрж┐ржХ ржЧрзНрж░рзБржкрзЗ рж╢рзЗржпрж╝рж╛рж░ рж╣ржмрзЗ

тЬЕ ржлрж░рзНржо рж╢рзБрж░рзБ ржХрж░рждрзЗ ржирж┐ржЪрзЗрж░ ржмрж╛ржЯржи ржкрзНрж░рзЗрж╕ ржХрж░рзБржи:
    """
    
    keyboard = {
        'inline_keyboard': [
            [{'text': 'ЁЯЪА ржлрж░рзНржо рж╢рзБрж░рзБ ржХрж░рзБржи', 'callback_data': 'start_form_from_menu'}],
            [{'text': 'ЁЯЖШ рж╕рж╣рж╛ржпрж╝рждрж╛', 'callback_data': 'menu_help'}],
            [{'text': 'тЖйя╕П ржорзЗржирзБрждрзЗ ржлрж┐рж░рзБржи', 'callback_data': 'back_to_main'}]
        ]
    }
    
    return jsonify({
        'method': 'editMessageText',
        'chat_id': chat_id,
        'message_id': message_id,
        'text': form_text,
        'parse_mode': 'HTML',
        'reply_markup': keyboard
    })

def refresh_main_menu(chat_id, message_id, user_info):
    """Refresh the main menu"""
    
    user_name = user_info.get('first_name', 'User')
    
    menu_text = f"""
ЁЯОп <b>ржорзЗржЗржи ржорзЗржирзБ</b>

тЬи рж╕рзНржмрж╛ржЧрждржо <b>{user_name}</b>!

ржирж┐ржЪрзЗрж░ ржмрж╛ржЯржиржЧрзБрж▓рзЛ ржерзЗржХрзЗ ржЖржкржирж╛рж░ ржкржЫржирзНржжрзЗрж░ ржЕржкрж╢ржи рж╕рж┐рж▓рзЗржХрзНржЯ ржХрж░рзБржи:

тАв <b>рж╕рж╣рж╛ржпрж╝рждрж╛</b> - рж╕ржм ржХржорж╛ржирзНржбрзЗрж░ рждржерзНржп
тАв <b>рж╢рзБрж░рзБ ржХрж░рзБржи</b> - ржмржЯ ржмрзНржпржмрж╣рж╛рж░ рж╢рзБрж░рзБ ржХрж░рзБржи  
тАв <b>ржлрж░рзНржо ржЬржорж╛ ржжрж┐ржи</b> - ржирж╛ржо ржУ ржЫржмрж┐ ржЬржорж╛ ржжрж┐ржи

ЁЯСЗ <b>ржмрж╛ржЯржи ржкрзНрж░рзЗрж╕ ржХрж░рзЗ ржирж┐рж░рзНржмрж╛ржЪржи ржХрж░рзБржи:</b>
    """
    
    keyboard = {
        'inline_keyboard': [
            [
                {'text': 'ЁЯЖШ рж╕рж╣рж╛ржпрж╝рждрж╛', 'callback_data': 'menu_help'},
                {'text': 'ЁЯЪА рж╢рзБрж░рзБ ржХрж░рзБржи', 'callback_data': 'menu_start'}
            ],
            [
                {'text': 'ЁЯУЛ ржлрж░рзНржо ржЬржорж╛ ржжрж┐ржи', 'callback_data': 'menu_form'}
            ],
            [
                {'text': 'ЁЯФД рж░рж┐ржлрзНрж░рзЗрж╢ ржорзЗржирзБ', 'callback_data': 'menu_refresh'}
            ]
        ]
    }
    
    return jsonify({
        'method': 'editMessageText',
        'chat_id': chat_id,
        'message_id': message_id,
        'text': menu_text,
        'parse_mode': 'HTML',
        'reply_markup': keyboard
    })
