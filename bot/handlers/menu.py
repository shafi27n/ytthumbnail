from flask import jsonify

def handle_menu(user_info, chat_id, message_text):
    """Handle /menu command with interactive buttons"""
    
    user_name = user_info.get('first_name', 'User')
    
    response_text = f"""
ЁЯОп <b>ржорзЗржЗржи ржорзЗржирзБ</b>

тЬи рж╕рзНржмрж╛ржЧрждржо <b>{user_name}</b>!

ржирж┐ржЪрзЗрж░ ржмрж╛ржЯржиржЧрзБрж▓рзЛ ржерзЗржХрзЗ ржЖржкржирж╛рж░ ржкржЫржирзНржжрзЗрж░ ржЕржкрж╢ржи рж╕рж┐рж▓рзЗржХрзНржЯ ржХрж░рзБржи:

тАв <b>рж╕рж╣рж╛ржпрж╝рждрж╛</b> - рж╕ржм ржХржорж╛ржирзНржбрзЗрж░ рждржерзНржп
тАв <b>рж╢рзБрж░рзБ ржХрж░рзБржи</b> - ржмржЯ ржмрзНржпржмрж╣рж╛рж░ рж╢рзБрж░рзБ ржХрж░рзБржи  
тАв <b>ржлрж░рзНржо ржЬржорж╛ ржжрж┐ржи</b> - ржирж╛ржо ржУ ржЫржмрж┐ ржЬржорж╛ ржжрж┐ржи

ЁЯСЗ <b>ржмрж╛ржЯржи ржкрзНрж░рзЗрж╕ ржХрж░рзЗ ржирж┐рж░рзНржмрж╛ржЪржи ржХрж░рзБржи:</b>
    """
    
    keyboard = {
        'inline_keyboard': [
            [
                {'text': 'ЁЯЖШ рж╕рж╣рж╛ржпрж╝рждрж╛', 'callback_data': 'menu_help'},
                {'text': 'ЁЯЪА рж╢рзБрж░рзБ ржХрж░рзБржи', 'callback_data': 'menu_start'}
            ],
            [
                {'text': 'ЁЯУЛ ржлрж░рзНржо ржЬржорж╛ ржжрж┐ржи', 'callback_data': 'menu_form'}
            ],
            [
                {'text': 'ЁЯФД рж░рж┐ржлрзНрж░рзЗрж╢ ржорзЗржирзБ', 'callback_data': 'menu_refresh'},
                {'text': 'тЭУ рж╕рж╛рж╣рж╛ржпрзНржп', 'callback_data': 'menu_help'}
            ]
        ]
    }
    
    return jsonify({
        'method': 'sendMessage',
        'chat_id': chat_id,
        'text': response_text,
        'parse_mode': 'HTML',
        'reply_markup': keyboard
    })

def handle_callback(callback_data, user_info, chat_id, message_id):
    """Handle menu button callbacks"""
    
    if callback_data == 'menu_help':
        return edit_menu_with_command(chat_id, message_id, "help")
    
    elif callback_data == 'menu_start':
        return edit_menu_with_command(chat_id, message_id, "start")
    
    elif callback_data == 'menu_form':
        return edit_menu_with_command(chat_id, message_id, "form")
    
    elif callback_data == 'menu_refresh':
        return refresh_menu(chat_id, message_id, user_info)
    
    return None

def edit_menu_with_command(chat_id, message_id, command_name):
    """Edit menu and show command execution message"""
    
    command_messages = {
        'help': {
            'text': """
ЁЯЖШ <b>рж╕рж╣рж╛ржпрж╝рждрж╛ ржорзЗржирзБ</b>

ЁЯУЪ <b>рж╕ржХрж▓ ржХржорж╛ржирзНржб:</b>

тАв <code>/start</code> - ржмржЯ рж╢рзБрж░рзБ ржХрж░рзБржи
тАв <code>/menu</code> - ржорзЗржЗржи ржорзЗржирзБ ржжрзЗржЦрзБржи  
тАв <code>/form</code> - ржлрж░рзНржо ржЬржорж╛ ржжрж┐ржи
тАв <code>/help</code> - рж╕рж╣рж╛ржпрж╝рждрж╛ ржжрзЗржЦрзБржи
тАв <code>/cancel</code> - ржмрж░рзНрждржорж╛ржи ржХрж╛ржЬ ржмрж╛рждрж┐рж▓ ржХрж░рзБржи

тД╣я╕П <b>ржорзЗржирзБрждрзЗ ржлрж┐рж░рждрзЗ:</b> /menu
            """,
            'buttons': [
                [{'text': 'тЖйя╕П ржорзЗржирзБрждрзЗ ржлрж┐рж░рзБржи', 'callback_data': 'menu_refresh'}]
            ]
        },
        'start': {
            'text': f"""
ЁЯЪА <b>ржмржЯ рж╢рзБрж░рзБ ржХрж░рж╛ рж╣рзЯрзЗржЫрзЗ!</b>

ЁЯОЙ рж╕рзНржмрж╛ржЧрждржо! ржПржЗ ржмржЯрзЗрж░ ржорж╛ржзрзНржпржорзЗ ржЖржкржирж┐:

тАв ЁЯУЛ ржлрж░рзНржо ржЬржорж╛ ржжрж┐рждрзЗ ржкрж╛рж░ржмрзЗржи
тАв ЁЯЦ╝я╕П ржЫржмрж┐ ржЖржкрж▓рзЛржб ржХрж░рждрзЗ ржкрж╛рж░ржмрзЗржи
тАв ЁЯСе ржЧрзНрж░рзБржкрзЗ ржбрж╛ржЯрж╛ рж╢рзЗржпрж╝рж╛рж░ ржХрж░рждрзЗ ржкрж╛рж░ржмрзЗржи

ЁЯУМ <b>ржорзЗржирзБ ржерзЗржХрзЗ ржЕржкрж╢ржи рж╕рж┐рж▓рзЗржХрзНржЯ ржХрж░рзБржи:</b>
            """,
            'buttons': [
                [{'text': 'ЁЯУЛ ржлрж░рзНржо ржЬржорж╛ ржжрж┐ржи', 'callback_data': 'menu_form'}],
                [{'text': 'тЖйя╕П ржорзЗржирзБрждрзЗ ржлрж┐рж░рзБржи', 'callback_data': 'menu_refresh'}]
            ]
        },
        'form': {
            'text': """
ЁЯУЛ <b>ржлрж░рзНржо рж╕рж┐рж╕рзНржЯрзЗржо</b>

ржПржЗ ржлрж░рзНржорзЗрж░ ржорж╛ржзрзНржпржорзЗ ржЖржкржирж┐:

1. ржЖржкржирж╛рж░ ржирж╛ржо ржЬржорж╛ ржжрж┐рждрзЗ ржкрж╛рж░ржмрзЗржи
2. ржЖржкржирж╛рж░ ржЫржмрж┐ ржЖржкрж▓рзЛржб ржХрж░рждрзЗ ржкрж╛рж░ржмрзЗржи  
3. ржбрж╛ржЯрж╛ ржЧрзНрж░рзБржкрзЗ рж╢рзЗржпрж╝рж╛рж░ ржХрж░рждрзЗ ржкрж╛рж░ржмрзЗржи

тЬЕ ржлрж░рзНржо рж╢рзБрж░рзБ ржХрж░рждрзЗ ржирж┐ржЪрзЗрж░ ржмрж╛ржЯржи ржкрзНрж░рзЗрж╕ ржХрж░рзБржи:
            """,
            'buttons': [
                [{'text': 'ЁЯУЭ ржлрж░рзНржо рж╢рзБрж░рзБ ржХрж░рзБржи', 'callback_data': 'start_form'}],
                [{'text': 'тЖйя╕П ржорзЗржирзБрждрзЗ ржлрж┐рж░рзБржи', 'callback_data': 'menu_refresh'}]
            ]
        }
    }
    
    if command_name in command_messages:
        message_data = command_messages[command_name]
        
        keyboard = {
            'inline_keyboard': message_data['buttons']
        }
        
        return jsonify({
            'method': 'editMessageText',
            'chat_id': chat_id,
            'message_id': message_id,
            'text': message_data['text'],
            'parse_mode': 'HTML',
            'reply_markup': keyboard
        })

def refresh_menu(chat_id, message_id, user_info):
    """Refresh the main menu"""
    
    user_name = user_info.get('first_name', 'User')
    
    response_text = f"""
ЁЯОп <b>ржорзЗржЗржи ржорзЗржирзБ</b>

тЬи рж╕рзНржмрж╛ржЧрждржо <b>{user_name}</b>!

ржирж┐ржЪрзЗрж░ ржмрж╛ржЯржиржЧрзБрж▓рзЛ ржерзЗржХрзЗ ржЖржкржирж╛рж░ ржкржЫржирзНржжрзЗрж░ ржЕржкрж╢ржи рж╕рж┐рж▓рзЗржХрзНржЯ ржХрж░рзБржи:

тАв <b>рж╕рж╣рж╛ржпрж╝рждрж╛</b> - рж╕ржм ржХржорж╛ржирзНржбрзЗрж░ рждржерзНржп
тАв <b>рж╢рзБрж░рзБ ржХрж░рзБржи</b> - ржмржЯ ржмрзНржпржмрж╣рж╛рж░ рж╢рзБрж░рзБ ржХрж░рзБржи  
тАв <b>ржлрж░рзНржо ржЬржорж╛ ржжрж┐ржи</b> - ржирж╛ржо ржУ ржЫржмрж┐ ржЬржорж╛ ржжрж┐ржи

ЁЯСЗ <b>ржмрж╛ржЯржи ржкрзНрж░рзЗрж╕ ржХрж░рзЗ ржирж┐рж░рзНржмрж╛ржЪржи ржХрж░рзБржи:</b>
    """
    
    keyboard = {
        'inline_keyboard': [
            [
                {'text': 'ЁЯЖШ рж╕рж╣рж╛ржпрж╝рждрж╛', 'callback_data': 'menu_help'},
                {'text': 'ЁЯЪА рж╢рзБрж░рзБ ржХрж░рзБржи', 'callback_data': 'menu_start'}
            ],
            [
                {'text': 'ЁЯУЛ ржлрж░рзНржо ржЬржорж╛ ржжрж┐ржи', 'callback_data': 'menu_form'}
            ],
            [
                {'text': 'ЁЯФД рж░рж┐ржлрзНрж░рзЗрж╢ ржорзЗржирзБ', 'callback_data': 'menu_refresh'},
                {'text': 'тЭУ рж╕рж╛рж╣рж╛ржпрзНржп', 'callback_data': 'menu_help'}
            ]
        ]
    }
    
    return jsonify({
        'method': 'editMessageText',
        'chat_id': chat_id,
        'message_id': message_id,
        'text': response_text,
        'parse_mode': 'HTML',
        'reply_markup': keyboard
    })

# Special handler for starting form from menu
def handle_start_form_callback(callback_data, user_info, chat_id, message_id):
    """Handle direct form start from menu"""
    
    if callback_data == 'start_form':
        # Send a new message to start the form (can't edit to start session properly)
        from .form import handle_form
        return handle_form(user_info, chat_id, "")
    
    return None

# Handle combined callbacks
def handle_all_callbacks(callback_data, user_info, chat_id, message_id):
    """Handle all callback types"""
    
    # First try menu callbacks
    result = handle_callback(callback_data, user_info, chat_id, message_id)
    if result:
        return result
    
    # Then try form start callback
    result = handle_start_form_callback(callback_data, user_info, chat_id, message_id)
    if result:
        return result
    
    return None
