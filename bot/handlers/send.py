import html
from telegram import Update
from telegram.ext import ContextTypes

async def handle_send(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """Handle /send command to actually forward content to @refffrrr"""
    
    user = update.effective_user
    message = update.effective_message
    chat_id = update.effective_chat.id
    
    # Check if message is a reply
    if message.reply_to_message:
        try:
            # Forward the replied message to @refffrrr
            await message.reply_to_message.forward(chat_id="@refffrrr")
            
            # Send confirmation to user
            response_text = f"""
тЬЕ <b>ржХржирзНржЯрзЗржирзНржЯ рж╕ржлрж▓ржнрж╛ржмрзЗ ржлрж░ржУржпрж╝рж╛рж░рзНржб ржХрж░рж╛ рж╣ржпрж╝рзЗржЫрзЗ!</b>

ЁЯУд <b>ржЯрж╛рж░рзНржЧрзЗржЯ:</b> @refffrrr
ЁЯСд <b>рж╕рзЗржирзНржбрж╛рж░:</b> {user.first_name}
ЁЯЖФ <b>ржЗржЙржЬрж╛рж░ ржЖржЗржбрж┐:</b> <code>{user.id}</code>

ЁЯОп <b>рж╕рзНржЯрзНржпрж╛ржЯрж╛рж╕:</b> ржЖржкржирж╛рж░ ржХржирзНржЯрзЗржирзНржЯ рж╕ржлрж▓ржнрж╛ржмрзЗ ржкрж╛ржарж╛ржирзЛ рж╣ржпрж╝рзЗржЫрзЗред
            """
            await message.reply_text(response_text, parse_mode='HTML')
            
        except Exception as e:
            error_text = f"""
тЭМ <b>ржлрж░ржУржпрж╝рж╛рж░рзНржб ржХрж░рждрзЗ рж╕ржорж╕рзНржпрж╛ рж╣ржпрж╝рзЗржЫрзЗ!</b>

тЪая╕П <b>рждрзНрж░рзБржЯрж┐:</b> {str(e)}

ЁЯФз <b>рж╕ржорж╛ржзрж╛ржи:</b>
тАв ржЗржирзНржЯрж╛рж░ржирзЗржЯ ржХрж╛ржирзЗржХрж╢ржи ржЪрзЗржХ ржХрж░рзБржи
тАв ржмржЯржЯрж┐ @refffrrr ржЧрзНрж░рзБржкрзЗ ржЖржЫрзЗ ржХрж┐ржирж╛ ржирж┐рж╢рзНржЪрж┐ржд ржХрж░рзБржи
тАв ржЖржмрж╛рж░ ржЪрзЗрж╖рзНржЯрж╛ ржХрж░рзБржи
            """
            await message.reply_text(error_text, parse_mode='HTML')
    
    # Check if there's text after command
    elif context.args:
        text_to_send = ' '.join(context.args)
        try:
            # Send text directly to @refffrrr
            await context.bot.send_message(
                chat_id="@refffrrr",
                text=f"""
ЁЯУи <b>ржирждрзБржи ржорзЗрж╕рзЗржЬ</b>

ЁЯТм <b>ржХржирзНржЯрзЗржирзНржЯ:</b>
{html.escape(text_to_send)}

ЁЯСд <b>рж╕рзЗржирзНржбрж╛рж░:</b> {user.first_name}
ЁЯЖФ <b>ржЗржЙржЬрж╛рж░ ржЖржЗржбрж┐:</b> <code>{user.id}</code>
                """,
                parse_mode='HTML'
            )
            
            # Send confirmation
            response_text = f"""
тЬЕ <b>ржЯрзЗржХрзНрж╕ржЯ ржорзЗрж╕рзЗржЬ рж╕ржлрж▓ржнрж╛ржмрзЗ ржкрж╛ржарж╛ржирзЛ рж╣ржпрж╝рзЗржЫрзЗ!</b>

ЁЯУд <b>ржЯрж╛рж░рзНржЧрзЗржЯ:</b> @refffrrr
ЁЯСд <b>рж╕рзЗржирзНржбрж╛рж░:</b> {user.first_name}

ЁЯУЭ <b>ржорзЗрж╕рзЗржЬ:</b>
<i>{html.escape(text_to_send)}</i>
            """
            await message.reply_text(response_text, parse_mode='HTML')
            
        except Exception as e:
            error_text = f"""
тЭМ <b>ржорзЗрж╕рзЗржЬ ржкрж╛ржарж╛рждрзЗ рж╕ржорж╕рзНржпрж╛!</b>

тЪая╕П <b>рждрзНрж░рзБржЯрж┐:</b> {str(e)}
            """
            await message.reply_text(error_text, parse_mode='HTML')
    
    else:
        # Show instructions
        response_text = f"""
ЁЯУд <b>рж╕рзЗржирзНржб ржХржорж╛ржирзНржб</b>

ЁЯСЛ рж╣рзНржпрж╛рж▓рзЛ <b>{user.first_name}</b>!

ЁЯЪА <b>ржмрзНржпржмрж╣рж╛рж░ ржкржжрзНржзрждрж┐:</b>

1. <b>рж░рж┐ржкрзНрж▓рж╛ржЗ ржорзЗржержб:</b>
   тАв ржпрзЗржХрзЛржирзЛ ржорзЗрж╕рзЗржЬ/ржЫржмрж┐/ржнрж┐ржбрж┐ржУ рж░рж┐ржкрзНрж▓рж╛ржЗ ржХрж░рзБржи
   тАв рж░рж┐ржкрзНрж▓рж╛ржЗ ржХрж░рзЗ рж▓рж┐ржЦрзБржи: <code>/send</code>

2. <b>ржЯрзЗржХрзНрж╕ржЯ ржорзЗржержб:</b>
   тАв рж╕рж░рж╛рж╕рж░рж┐ рж▓рж┐ржЦрзБржи: <code>/send ржЖржкржирж╛рж░_ржорзЗрж╕рзЗржЬ</code>

ЁЯУБ <b>рж╕рж╛ржкрзЛрж░рзНржЯрзЗржб ржХржирзНржЯрзЗржирзНржЯ:</b>
тЬЕ ржЯрзЗржХрзНрж╕ржЯ ржорзЗрж╕рзЗржЬ
тЬЕ ржЫржмрж┐ (JPEG, PNG, GIF) 
тЬЕ ржнрж┐ржбрж┐ржУ (MP4, MOV)
тЬЕ ржбржХрзБржорзЗржирзНржЯ (PDF, DOC, TXT)
тЬЕ ржЕржбрж┐ржУ (MP3, VOICE)
тЬЕ рж╕рзНржЯрж┐ржХрж╛рж░

ЁЯОп <b>ржЯрж╛рж░рзНржЧрзЗржЯ:</b> @refffrrr

ЁЯТб <b>ржЙржжрж╛рж╣рж░ржг:</b>
<code>/send рж╣рзНржпрж╛рж▓рзЛ, ржПржЯрж┐ ржЯрзЗрж╕рзНржЯ ржорзЗрж╕рзЗржЬ</code>
        """
        await message.reply_text(response_text, parse_mode='HTML')
