import os
import requests
import telebot
from pytube import YouTube
from urllib.parse import urlparse, parse_qs
from flask import Flask, request, jsonify

app = Flask(__name__)

# Webhook URL ржерзЗржХрзЗ ржЯрзЛржХрзЗржи ржПржХрзНрж╕ржЯрзНрж░рзНржпрж╛ржХрзНржЯ ржХрж░рж╛рж░ ржлрж╛ржВрж╢ржи
def get_token_from_webhook():
    webhook_url = os.environ.get('WEBHOOK_URL', '')
    if webhook_url:
        try:
            parsed_url = urlparse(webhook_url)
            query_params = parse_qs(parsed_url.query)
            token = query_params.get('token', [None])[0]
            return token
        except:
            return None
    return None

# ржЯрзЛржХрзЗржи рж▓рзЛржб ржХрж░рзБржи
BOT_TOKEN = get_token_from_webhook()

if not BOT_TOKEN:
    # ржпржжрж┐ Webhook ржерзЗржХрзЗ ржЯрзЛржХрзЗржи ржирж╛ ржорзЗрж▓рзЗ, environment variable ржерзЗржХрзЗ ржЪрзЗрж╖рзНржЯрж╛ ржХрж░рзБржи
    BOT_TOKEN = os.environ.get('BOT_TOKEN')
    
if not BOT_TOKEN:
    raise ValueError("тЭМ ржмржЯ ржЯрзЛржХрзЗржи ржкрж╛ржУржпрж╝рж╛ ржпрж╛ржпрж╝ржирж┐ред WEBHOOK_URL ржмрж╛ BOT_TOKEN environment variable рж╕рзЗржЯ ржХрж░рзБржиред")

bot = telebot.TeleBot(BOT_TOKEN)

# ржЗржЙржЯрж┐ржЙржм ржнрж┐ржбрж┐ржУ ржЖржЗржбрж┐ ржПржХрзНрж╕ржЯрзНрж░рзНржпрж╛ржХрзНржЯ ржХрж░рж╛рж░ ржлрж╛ржВрж╢ржи
def extract_video_id(url):
    parsed_url = urlparse(url)
    if parsed_url.hostname == 'youtu.be':
        return parsed_url.path[1:]
    if parsed_url.hostname in ('www.youtube.com', 'youtube.com'):
        if parsed_url.path == '/watch':
            return parse_qs(parsed_url.query)['v'][0]
        if parsed_url.path[:7] == '/embed/':
            return parsed_url.path.split('/')[2]
        if parsed_url.path[:3] == '/v/':
            return parsed_url.path.split('/')[2]
    return None

# ржерж╛ржорзНржмржирзЗржЗрж▓ ржбрж╛ржЙржирж▓рзЛржб ржХрж░рж╛рж░ ржлрж╛ржВрж╢ржи
def download_thumbnail(video_id):
    try:
        # ржмрж┐ржнрж┐ржирзНржи рж░рзЗржЬрзЛрж▓рж┐ржЙрж╢ржирзЗрж░ ржерж╛ржорзНржмржирзЗржЗрж▓ URL
        thumbnails = {
            'maxres': f'https://img.youtube.com/vi/{video_id}/maxresdefault.jpg',
            'sd': f'https://img.youtube.com/vi/{video_id}/sddefault.jpg',
            'hq': f'https://img.youtube.com/vi/{video_id}/hqdefault.jpg',
            'mq': f'https://img.youtube.com/vi/{video_id}/mqdefault.jpg',
            'default': f'https://img.youtube.com/vi/{video_id}/default.jpg'
        }
        
        # рж╕рж░рзНржмрзЛржЪрзНржЪ ржХрзЛржпрж╝рж╛рж▓рж┐ржЯрж┐рж░ ржерж╛ржорзНржмржирзЗржЗрж▓ ржбрж╛ржЙржирж▓рзЛржб ржХрж░рж╛рж░ ржЪрзЗрж╖рзНржЯрж╛ ржХрж░рзБржи
        for quality, url in thumbnails.items():
            response = requests.get(url, timeout=10)
            if response.status_code == 200 and len(response.content) > 1000:  # ржнрзНржпрж╛рж▓рж┐ржб ржЗржорзЗржЬ ржЪрзЗржХ
                filename = f"{video_id}_{quality}.jpg"
                with open(filename, 'wb') as f:
                    f.write(response.content)
                return filename
        return None
    except Exception as e:
        print(f"Error downloading thumbnail: {e}")
        return None

# /start ржХржорж╛ржирзНржб рж╣рзНржпрж╛ржирзНржбрж▓рж╛рж░
@bot.message_handler(commands=['start'])
def send_welcome(message):
    welcome_text = """
ЁЯОЙ **ржЗржЙржЯрж┐ржЙржм ржерж╛ржорзНржмржирзЗржЗрж▓ ржбрж╛ржЙржирж▓рзЛржбрж╛рж░ ржмржЯрзЗ рж╕рзНржмрж╛ржЧрждржо!** ЁЯОЙ

ржПржХржЯрж┐ ржЗржЙржЯрж┐ржЙржм ржнрж┐ржбрж┐ржУрж░ рж▓рж┐ржВржХ ржкрж╛ржарж╛ржи ржПржмржВ ржЖржорж┐ рждрж╛рж░ ржерж╛ржорзНржмржирзЗржЗрж▓ ржбрж╛ржЙржирж▓рзЛржб ржХрж░рзЗ ржжрж┐ржмред

ЁЯУМ **ржирж┐рж░рзНржжрзЗрж╢ржирж╛:**
1. ржПржХржЯрж┐ ржЗржЙржЯрж┐ржЙржм ржнрж┐ржбрж┐ржУрж░ рж▓рж┐ржВржХ ржХржкрж┐ ржХрж░рзБржи
2. рж▓рж┐ржВржХржЯрж┐ ржПржЗ ржЪрзНржпрж╛ржЯрзЗ ржкрж╛ржарж╛ржи
3. ржЖржорж┐ ржерж╛ржорзНржмржирзЗржЗрж▓ ржбрж╛ржЙржирж▓рзЛржб ржХрж░рзЗ ржЖржкржирж╛ржХрзЗ ржкрж╛ржарж╛ржм

ржЙржжрж╛рж╣рж░ржг: `https://www.youtube.com/watch?v=dQw4w9WgXcQ`
    """
    bot.reply_to(message, welcome_text)

# /help ржХржорж╛ржирзНржб рж╣рзНржпрж╛ржирзНржбрж▓рж╛рж░
@bot.message_handler(commands=['help'])
def send_help(message):
    help_text = """
ЁЯдЦ **ржЗржЙржЯрж┐ржЙржм ржерж╛ржорзНржмржирзЗржЗрж▓ ржбрж╛ржЙржирж▓рзЛржбрж╛рж░ ржмржЯ - рж╕рж╛рж╣рж╛ржпрзНржп**

ЁЯУЛ **ржХржорж╛ржирзНржбрж╕ржорзВрж╣:**
/start - ржмржЯ рж╢рзБрж░рзБ ржХрж░рзБржи
/help - ржПржЗ рж╕рж╛рж╣рж╛ржпрзНржп ржорзЗрж╕рзЗржЬ ржжрзЗржЦрзБржи

ЁЯФЧ **рж▓рж┐ржВржХ ржлрж░ржорзНржпрж╛ржЯ:**
- https://www.youtube.com/watch?v=VIDEO_ID
- https://youtu.be/VIDEO_ID
- https://www.youtube.com/embed/VIDEO_ID

тЭУ **рж╕ржорж╕рзНржпрж╛ рж╕ржорж╛ржзрж╛ржи:**
- ржнрзНржпрж╛рж▓рж┐ржб ржЗржЙржЯрж┐ржЙржм рж▓рж┐ржВржХ ржкрж╛ржарж╛ржи ржирж┐рж╢рзНржЪрж┐ржд ржХрж░рзБржи
- рж▓рж┐ржВржХржЯрж┐ ржкрж╛ржмрж▓рж┐ржХ ржнрж┐ржбрж┐ржУрж░ рж╣рждрзЗ рж╣ржмрзЗ
- ржЗржирзНржЯрж╛рж░ржирзЗржЯ ржХрж╛ржирзЗржХрж╢ржи ржЪрзЗржХ ржХрж░рзБржи
    """
    bot.reply_to(message, help_text)

# ржЗржЙржЯрж┐ржЙржм рж▓рж┐ржВржХ ржкрзНрж░рж╕рзЗрж╕ ржХрж░рж╛рж░ рж╣рзНржпрж╛ржирзНржбрж▓рж╛рж░
@bot.message_handler(func=lambda message: True)
def handle_youtube_link(message):
    text = message.text.strip()
    
    # ржЪрзЗржХ ржХрж░рзБржи ржпржжрж┐ ржорзЗрж╕рзЗржЬрзЗ ржЗржЙржЯрж┐ржЙржм рж▓рж┐ржВржХ ржерж╛ржХрзЗ
    if 'youtube.com' in text or 'youtu.be' in text:
        bot.reply_to(message, "ЁЯФН ржЖржкржирж╛рж░ ржЗржЙржЯрж┐ржЙржм рж▓рж┐ржВржХ ржкрзНрж░рж╕рзЗрж╕ ржХрж░рж╛ рж╣ржЪрзНржЫрзЗ...")
        
        video_id = extract_video_id(text)
        
        if video_id:
            try:
                # ржнрж┐ржбрж┐ржУ рждржерзНржп ржкрж╛ржУржпрж╝рж╛рж░ ржЬржирзНржп pytube ржмрзНржпржмрж╣рж╛рж░
                yt = YouTube(text)
                video_title = yt.title
                
                bot.reply_to(message, f"ЁЯУ╣ **ржнрж┐ржбрж┐ржУ ржЯрж╛ржЗржЯрзЗрж▓:** {video_title}\n\nтмЗя╕П ржерж╛ржорзНржмржирзЗржЗрж▓ ржбрж╛ржЙржирж▓рзЛржб ржХрж░рж╛ рж╣ржЪрзНржЫрзЗ...")
                
                # ржерж╛ржорзНржмржирзЗржЗрж▓ ржбрж╛ржЙржирж▓рзЛржб ржХрж░рзБржи
                thumbnail_file = download_thumbnail(video_id)
                
                if thumbnail_file:
                    # ржерж╛ржорзНржмржирзЗржЗрж▓ ржлрж╛ржЗрж▓ ржкрж╛ржарж╛ржи
                    with open(thumbnail_file, 'rb') as photo:
                        bot.send_photo(message.chat.id, photo, 
                                     caption=f"ЁЯЦ╝я╕П **ржерж╛ржорзНржмржирзЗржЗрж▓ ржбрж╛ржЙржирж▓рзЛржб рж╕ржорзНржкрзВрж░рзНржг!**\n\nЁЯУ╣ **ржнрж┐ржбрж┐ржУ:** {video_title}\nЁЯФЧ **ржнрж┐ржбрж┐ржУ ржЖржЗржбрж┐:** `{video_id}`")
                    
                    # ржЯрзЗржорзНржкрзЛрж░рж╛рж░рж┐ ржлрж╛ржЗрж▓ ржбрж┐рж▓рж┐ржЯ ржХрж░рзБржи
                    os.remove(thumbnail_file)
                else:
                    bot.reply_to(message, "тЭМ ржерж╛ржорзНржмржирзЗржЗрж▓ ржбрж╛ржЙржирж▓рзЛржб ржХрж░рждрзЗ рж╕ржорж╕рзНржпрж╛ рж╣ржпрж╝рзЗржЫрзЗред ржнрж┐ржбрж┐ржУржЯрж┐ ржкрж╛ржмрж▓рж┐ржХ ржХрж┐ржирж╛ ржЪрзЗржХ ржХрж░рзБржиред")
                    
            except Exception as e:
                bot.reply_to(message, f"тЭМ ржнрж┐ржбрж┐ржУ рждржерзНржп ржкрж╛ржУржпрж╝рж╛ ржпрж╛ржпрж╝ржирж┐ред рждрзНрж░рзБржЯрж┐: {str(e)}")
        else:
            bot.reply_to(message, "тЭМ ржнрзНржпрж╛рж▓рж┐ржб ржЗржЙржЯрж┐ржЙржм рж▓рж┐ржВржХ ржкрзНрж░ржжрж╛ржи ржХрж░рзБржиред")
    else:
        bot.reply_to(message, "тЭМ ржжржпрж╝рж╛ ржХрж░рзЗ ржПржХржЯрж┐ ржнрзНржпрж╛рж▓рж┐ржб ржЗржЙржЯрж┐ржЙржм рж▓рж┐ржВржХ ржкрж╛ржарж╛ржиред")

# Webhook endpoint for health check
@app.route('/')
def home():
    return jsonify({
        "status": "active", 
        "bot": "YouTube Thumbnail Downloader",
        "token_received": bool(BOT_TOKEN)
    })

# Webhook endpoint for receiving updates (optional)
@app.route('/webhook', methods=['POST'])
def webhook():
    if request.method == 'POST':
        json_string = request.get_data().decode('utf-8')
        update = telebot.types.Update.de_json(json_string)
        bot.process_new_updates([update])
        return 'OK', 200

# Polling ржорзЗржержб ржжрж┐ржпрж╝рзЗ ржмржЯ ржЪрж╛рж▓рзБ (рж╢рзЗржпрж╝рж╛рж░рзНржб рж╣рзЛрж╕рзНржЯрж┐ржВ ржПрж░ ржЬржирзНржп ржЙржкржпрзЛржЧрзА)
if __name__ == "__main__":
    print("ЁЯдЦ ржмржЯ ржЪрж╛рж▓рзБ рж╣ржпрж╝рзЗржЫрзЗ...")
    print(f"ЁЯФС ржЯрзЛржХрзЗржи рж╕рзНржЯрзНржпрж╛ржЯрж╛рж╕: {'тЬЕ ржкрж╛ржУржпрж╝рж╛ ржЧрзЗржЫрзЗ' if BOT_TOKEN else 'тЭМ ржкрж╛ржУржпрж╝рж╛ ржпрж╛ржпрж╝ржирж┐'}")
    
    # Environment variables ржерзЗржХрзЗ ржУржпрж╝рзЗржмрж╣рзБржХ URL ржкрзНрж░рж┐ржирзНржЯ ржХрж░рзБржи
    webhook_url = os.environ.get('WEBHOOK_URL', 'Not set')
    print(f"ЁЯМР Webhook URL: {webhook_url}")
    
    try:
        bot.infinity_polling()
    except Exception as e:
        print(f"тЭМ ржмржЯ ржЪрж╛рж▓рзБ ржХрж░рждрзЗ рж╕ржорж╕рзНржпрж╛: {e}")
