from flask import Flask, request, jsonify
import os
import logging

# ‡¶≤‡¶ó‡¶ø‡¶Ç ‡¶ï‡¶®‡¶´‡¶ø‡¶ó‡¶æ‡¶∞‡ßá‡¶∂‡¶®
logging.basicConfig(
    level=logging.INFO,
    format='%(asctime)s - %(name)s - %(levelname)s - %(message)s'
)
logger = logging.getLogger(__name__)

app = Flask(__name__)

# ‡¶á‡¶â‡¶ú‡¶æ‡¶∞ ‡¶∏‡ßç‡¶ü‡ßá‡¶ü ‡¶∏‡ßç‡¶ü‡ßã‡¶∞ ‡¶ï‡¶∞‡¶æ‡¶∞ ‡¶ú‡¶®‡ßç‡¶Ø ‡¶°‡¶ø‡¶ï‡¶∂‡¶®‡¶æ‡¶∞‡¶ø
user_states = {}

def send_telegram_message(chat_id, text, parse_mode='Markdown'):
    """
    Telegram-‡¶è ‡¶Æ‡ßá‡¶∏‡ßá‡¶ú ‡¶∏‡ßá‡¶®‡ßç‡¶° ‡¶ï‡¶∞‡¶æ‡¶∞ ‡¶ú‡¶®‡ßç‡¶Ø ‡¶∏‡¶π‡¶æ‡¶Ø‡¶º‡¶ï ‡¶´‡¶æ‡¶Ç‡¶∂‡¶®
    """
    return {
        'method': 'sendMessage',
        'chat_id': chat_id,
        'text': text,
        'parse_mode': parse_mode
    }

@app.route('/', methods=['GET', 'POST'])
def handle_request():
    try:
        # URL ‡¶•‡ßá‡¶ï‡ßá ‡¶ü‡ßã‡¶ï‡ßá‡¶® ‡¶®‡ßá‡¶ì‡ßü‡¶æ
        token = request.args.get('token')
        
        if not token:
            return jsonify({
                'error': 'Token required',
                'solution': 'Add ?token=YOUR_BOT_TOKEN to URL'
            }), 400

        # GET request ‡¶π‡ßç‡¶Ø‡¶æ‡¶®‡ßç‡¶°‡ßá‡¶≤
        if request.method == 'GET':
            return jsonify({
                'status': 'Bot is running',
                'token_received': True
            })

        # POST request ‡¶π‡ßç‡¶Ø‡¶æ‡¶®‡ßç‡¶°‡ßá‡¶≤
        if request.method == 'POST':
            update = request.get_json()
            
            if not update:
                return jsonify({'error': 'Invalid JSON data'}), 400
            
            logger.info(f"Update received: {update}")
            
            # ‡¶Æ‡ßá‡¶∏‡ßá‡¶ú ‡¶°‡ßá‡¶ü‡¶æ ‡¶è‡¶ï‡ßç‡¶∏‡¶ü‡ßç‡¶∞‡ßç‡¶Ø‡¶æ‡¶ï‡ßç‡¶ü
            chat_id = None
            message_text = ''
            
            if 'message' in update and 'text' in update['message']:
                chat_id = update['message']['chat']['id']
                message_text = update['message']['text']
            else:
                return jsonify({'ok': True})

            if not chat_id:
                return jsonify({'error': 'Chat ID not found'}), 400

            # ‡¶∂‡ßÅ‡¶ß‡ßÅ‡¶Æ‡¶æ‡¶§‡ßç‡¶∞ /start ‡¶ï‡¶Æ‡¶æ‡¶®‡ßç‡¶° ‡¶π‡ßç‡¶Ø‡¶æ‡¶®‡ßç‡¶°‡ßá‡¶≤
            if message_text.startswith('/start'):
                welcome_text = """
ü§ñ **‡¶∏‡ßç‡¶¨‡¶æ‡¶ó‡¶§‡¶Æ!**

‡¶Ü‡¶Æ‡¶æ‡¶∞ ‡¶®‡¶æ‡¶Æ ‡¶á‡¶®‡ßç‡¶ü‡¶æ‡¶∞‚Äç‡ßç‡¶Ø‡¶æ‡¶ï‡ßç‡¶ü‡¶ø‡¶≠ ‡¶¨‡¶ü‡•§ ‡¶Ü‡¶Æ‡¶ø ‡¶Ü‡¶™‡¶®‡¶æ‡¶∞ ‡¶ï‡¶ø‡¶õ‡ßÅ ‡¶§‡¶•‡ßç‡¶Ø ‡¶®‡ßá‡¶¨‡•§

‡¶Ü‡¶™‡¶®‡¶æ‡¶∞ ‡¶®‡¶æ‡¶Æ ‡¶ï‡¶ø?
                """
                
                # ‡¶á‡¶â‡¶ú‡¶æ‡¶∞ ‡¶∏‡ßç‡¶ü‡ßá‡¶ü ‡¶∏‡ßá‡¶ü‡¶Ü‡¶™ ‡¶∂‡ßÅ‡¶∞‡ßÅ
                user_states[chat_id] = {'step': 'asking_name'}
                
                return jsonify(send_telegram_message(
                    chat_id=chat_id,
                    text=welcome_text
                ))

            # ‡¶á‡¶â‡¶ú‡¶æ‡¶∞ ‡¶∏‡ßç‡¶ü‡ßá‡¶ü ‡¶Ö‡¶®‡ßÅ‡¶Ø‡¶æ‡¶Ø‡¶º‡ßÄ ‡¶™‡ßç‡¶∞‡¶∏‡ßá‡¶∏
            user_state = user_states.get(chat_id, {})
            current_step = user_state.get('step', None)

            if current_step == 'asking_name':
                user_states[chat_id] = {
                    'step': 'asking_age',
                    'name': message_text
                }
                return jsonify(send_telegram_message(
                    chat_id=chat_id,
                    text=f"‡¶ß‡¶®‡ßç‡¶Ø‡¶¨‡¶æ‡¶¶ {message_text}! ‡¶Ü‡¶™‡¶®‡¶æ‡¶∞ ‡¶¨‡¶Ø‡¶º‡¶∏ ‡¶ï‡¶ø?"
                ))

            elif current_step == 'asking_age':
                user_states[chat_id] = {
                    'step': None,
                    'name': user_state.get('name', '‡¶Ö‡¶ú‡¶æ‡¶®‡¶æ'),
                    'age': message_text
                }
                return jsonify(send_telegram_message(
                    chat_id=chat_id,
                    text=f"""‚úÖ **‡¶™‡ßç‡¶∞‡ßã‡¶´‡¶æ‡¶á‡¶≤ ‡¶∏‡¶Æ‡ßç‡¶™‡ßÇ‡¶∞‡ßç‡¶£!**

**‡¶®‡¶æ‡¶Æ:** {user_state.get('name', '‡¶Ö‡¶ú‡¶æ‡¶®‡¶æ')}
**‡¶¨‡¶Ø‡¶º‡¶∏:** {message_text}

‡¶Ü‡¶™‡¶®‡¶æ‡¶∞ ‡¶™‡ßç‡¶∞‡ßã‡¶´‡¶æ‡¶á‡¶≤ ‡¶∏‡¶Ç‡¶∞‡¶ï‡ßç‡¶∑‡¶£ ‡¶ï‡¶∞‡¶æ ‡¶π‡¶Ø‡¶º‡ßá‡¶õ‡ßá!"""
                ))

            # ‡¶Ö‡¶®‡ßç‡¶Ø ‡¶∏‡¶¨ ‡¶Æ‡ßá‡¶∏‡ßá‡¶ú‡ßá‡¶∞ ‡¶ú‡¶®‡ßç‡¶Ø
            else:
                return jsonify(send_telegram_message(
                    chat_id=chat_id,
                    text="‡¶¨‡¶ü ‡¶∂‡ßÅ‡¶∞‡ßÅ ‡¶ï‡¶∞‡¶§‡ßá /start ‡¶ï‡¶Æ‡¶æ‡¶®‡ßç‡¶° ‡¶¨‡ßç‡¶Ø‡¶¨‡¶π‡¶æ‡¶∞ ‡¶ï‡¶∞‡ßÅ‡¶®"
                ))

    except Exception as e:
        logger.error(f'Error: {e}')
        return jsonify({'error': 'Processing failed'}), 500

if __name__ == '__main__':
    port = int(os.environ.get('PORT', 10000))
    app.run(host='0.0.0.0', port=port, debug=False)
